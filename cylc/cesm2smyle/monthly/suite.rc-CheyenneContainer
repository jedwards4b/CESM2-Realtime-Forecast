#!Jinja2

{% set ensemble_start = 1%}
{% set ensemble_end   = 10 %}
[meta]
  title = CESM CYLC workflow for ensemble from cesm2smyle
[cylc]
  UTC mode = True
  cycle point format = CCYY-MM-DD
  [[environment]]
    #CYLC_TASK_CYCLE_MONTH = "11"
    FCST_HOME = "/glade/work/nanr/cesm_tags/CASE_tools/cesm2-smyle/"
    CESM_ROOT = "/glade/work/nanr/cesm_tags/cesm2.1.4-SMYLE/"
    SCRATCH   = "/glade/scratch/nanr/"
    USECASE   = "cesm2smyle"
    REFDIR    = "/glade/scratch/nanr/SMYLE/inputdata/cesm2_init/"
    POSTPROCESS_PATH = "/glade/work/jedwards/sandboxes/CESM_postprocessing"
    SMYLE_ROOT = "/glade/p/cesm/espwg/CESM2-SMYLE"
  [[parameters]]
    # The number of ensemble members can be changed here
    # The first number here should always be 1 and the second the number of members to run
    # the member to start with is firstmember
    mbr = {{ ensemble_start }}..{{ ensemble_end }}


[scheduling]
  # Change the run start and end dates here
    initial cycle point = "2009-11-01"
    final cycle point = "2009-11-01"

    # must start Feb 01, any year:
    # initial cycle point constraints = "0201T00"
    # must start Nov 01, any year:
    initial cycle point constraints = "1101T00"

  [[dependencies]]
  # Weekly Cycling on monday, new date will submit when st_archive is complete for each member
  # run needs to finish, not nessasarily successfully for next step to start
  # 3 month cycle
  # [[[R/P3M]]]
  #     st_archive<mbr>[-P3M] => build_model => run_family:finish-all
    [[[R/P1Y]]]
      graph = """
        pp_family:finish-all => dispose
        st_archive<mbr>[-P1Y] => get_data => build_model => run_family:finish-all
        run<mbr> => st_archive<mbr> => pp<mbr>
             """
[runtime]
  [[get_data]]
    script = """
module load ncl nco
cd ${FCST_HOME}/bin/
./generate_cami_ensemble.py --ensemble-start {{ ensemble_start }} --ensemble-end {{ ensemble_end }}
"""
    [[[job]]]
      batch system = slurm
      shell = /bin/bash
    [[[directives]]]
       --ntasks=1
       --cpus-per-task=8
       --partition=dav
       --time=01:00:00
       --account=NCGD0047
    [[[environment]]]
       SMYLE_ROOT = "/glade/p/cesm/espwg/CESM2-SMYLE"

  [[build_model]]
    script = """
cd ${FCST_HOME}/bin/
./buildcase.py --ensemble-start {{ ensemble_start }} --ensemble-end {{ ensemble_end }}
"""
    [[[job]]]
      batch system = pbs
      batch submit command template = qsub -q share -l walltime=01:00:00 -A NCGD0047 '%(job)s'
      shell = /bin/bash
    [[[directives]]]
       -r = n
       -j = oe
       -V =
       -S = /bin/bash
       -l = select=1:ncpus=18:ompthreads=18

  [[st_archive<mbr>]]
    script = """
cd ${SMYLE_ROOT}/cases/b.e21.BSMYLE.f09_g17.${CYLC_TASK_CYCLE_DATE}.$(printf "%03d" ${CYLC_TASK_PARAM_mbr})
./case.submit --job case.st_archive
"""
    [[[environment]]]
      #CYLC_TASK_CYCLE_MONTH = $(cylc cyclepoint --template=%m)
      CYLC_TASK_CYCLE_DATE = $(cylc cyclepoint --template=%Y-%m)
    [[pp<mbr>]]
      inherit = pp_family
    [[pp_family]]
      script = """
cd ${SMYLE_ROOT}/cases/b.e21.BSMYLE.f09_g17.${CYLC_TASK_CYCLE_DATE}.$(printf "%03d" ${CYLC_TASK_PARAM_mbr})
unset PYTHONPATH
module use /glade/work/bdobbins/Software/Modules
module load cesm_postprocessing
if [ ! -d "postprocess" ]; then
   create_postprocess -caseroot=`pwd`
fi
cd postprocess
pp_config --set TIMESERIES_OUTPUT_ROOTDIR=/glade/scratch/nanr/SMYLE/timeseries/b.e21.BSMYLE.f09_g17.${CYLC_TASK_CYCLE_DATE}.$(printf "%03d" ${CYLC_TASK_PARAM_mbr})
today=`date '+%Y%m%d-%H%M%S'`
mpirun ./timeseries > ./logs/timeseries.log.${today} 2>&1
"""
    [[[environment]]]
      #CYLC_TASK_CYCLE_MONTH = $(cylc cyclepoint --template=%m)
      CYLC_TASK_CYCLE_DATE = $(cylc cyclepoint --template=%Y-%m)
    [[[job]]]
      batch system = pbs
      batch submit command template = qsub -q regular -l walltime=02:00:00 -A NCGD0047 '%(job)s'
    [[[directives]]]
       -r = n
       -j = oe
       -V =
       -S = /bin/bash
       -l = select=1:ncpus=36:mpiprocs=36:ompthreads=1

    [[dispose]]
    # Globus process, must run on host
      script = """
#${FCST_HOME}/bin/dispose_data.py
"""
    [[run<mbr>]]
       inherit = run_family
    [[run_family]]
    script = """
cd ${SMYLE_ROOT}/cases/b.e21.BSMYLE.f09_g17.${CYLC_TASK_CYCLE_DATE}.$(printf "%03d" ${CYLC_TASK_PARAM_mbr})
./case.submit --job case.run
"""
    [[[environment]]]
      CYLC_TASK_CYCLE_MONTH = $(cylc cyclepoint --template=%m)
      CYLC_TASK_CYCLE_DATE = $(cylc cyclepoint --template=%Y-%m)
    [[[job]]]
      # Retry each run up to 2 times with different fv_nsplit values
      # execution retry delays = 2*PT6S
      batch system = pbs
      batch submit command template = qsub -q economy -l walltime=12:00:00 -A NCGD0047 '%(job)s'
    [[[directives]]]
       -r = n
       -j = oe
       -V =
       -S = /bin/bash
       # dont forget to change this line if you change pelayout
       # How can we connect this to the pelayout?
       -l = select=20:ncpus=36:mpiprocs=36:ompthreads=1
    [[[events]]]
        handler events = retry, failed
